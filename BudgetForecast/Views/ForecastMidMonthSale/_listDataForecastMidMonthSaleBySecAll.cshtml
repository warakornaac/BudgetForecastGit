@using BudgetForecast.Model;
@{
    ViewBag.Title = "_listDataForcastSale";
    var arrMonth = @ViewBag.monthList;
    string codeColorMonthCurrent = "#f9ecdc";
    int monthInputCurrent = 0;
    string setHeight = "980px";
    string setHeightCustomer = "920px";
    string name1 = Environment.MachineName; //returns webserver
    string name2 = System.Net.Dns.GetHostName(); //returns webserver
                                                 // string name3 = System.Windows.Forms.SystemInformation.ComputerName; //returns webserver
    string name4 = System.Environment.GetEnvironmentVariable("COMPUTERNAME").ToString();//returns webserver

    var monthSplits = @ViewBag.MonthYearList[0].Text.Split('-');
    monthInputCurrent = int.Parse(monthSplits[0]);
    string formattedMonthInputCurrent = monthInputCurrent.ToString("00");
}
@*Summary by month*@
<div class="card mb-12">
    <div class="row" style="padding-right: 17px; padding-left: 2px">
        @if (ViewBag.sumByMonth != null)
        {
            foreach (var dataItemBySec in (List<StoreSearchForecastSaleModel>)ViewBag.sumByMonth)
            {
                string idNOTE = "note_show_all_" + dataItemBySec.Sec;
                string secval = "sum_avg_forecast_" + dataItemBySec.Sec;
                if (@dataItemBySec.Budget != 0 || dataItemBySec.Actual != 0 || dataItemBySec.FC != 0)
                {
                    <div class="col-xs-12 col-sm-6 col-md-6 col-lg-4 col-xl-3 col-xxl-2" style="padding-top: 5px; display: block; padding-right: 0px" id="sum_by_dec_@dataItemBySec.Sec">
                        <div class="card support-bar overflow-hidden" style="background-color: whitesmoke; width: 100%;">
                            <div class="card-body pb-0" style="margin-top: -10px;">
                                @*<button type="button" class="btn btn-success" onclick="addsecNote();" style="font-size:medium; display:inline-block; margin-bottom:8px;"><i class="fa fa-pencil-square-o" aria-hidden="true"></i></button>
                                    <h4 class="" style="font-weight: 700; display:inline-block;">SEC @dataItemBySec.Sec <span class="iconLoading"></span> </h4>
                                    <span class="text-c-blue"></span>*@
                                <button class="btn btn-warning" onclick="addsecNote('@dataItemBySec.Sec');" style="font-size:medium; display:inline-block; margin-bottom:8px;"> <i class="fa fa-plus" aria-hidden="true"></i></button>
                                <h4 class="" style="font-weight: 700; display: inline-block;">SEC @dataItemBySec.Sec <span class="iconLoading"></span> </h4>
                                <span class="text-c-blue"></span>
                                <p class="note_show_all_@dataItemBySec.Sec @idNOTE d-inline-block text-truncate btn" id="@idNOTE" style="max-width: 170px; font-size: medium; padding-bottom: 8px;" onclick="ShowNote('@dataItemBySec.Sec');">  </p>
                                <input type="hidden" class="form-control vright @secval" id="@secval" value="@dataItemBySec.Sec" />
                                <input data-sec="@dataItemBySec.Sec" class="note_input_all_@dataItemBySec.Sec" id="note_input_all_@dataItemBySec.Sec" type="hidden" />
                            </div>
                            <div class="card-footer bg-info text-white" style="padding-top: 1px; padding-bottom: 1px; padding-left: 6px; padding-right: 12px">
                                <div class="row text-center">
                                    <div class="col">
                                        <h4 class="m-0 text-white"> <span class="badge badge-light sum_sec_budget_all_@dataItemBySec.Sec" id="sum_sec_budget_all_@dataItemBySec.Sec" style="font-size: 16px; font-weight: 500;"> @dataItemBySec.Budget.ToString("N0") </span></h4>
                                        <span>Budget</span>
                                    </div>
                                    <div class="col">
                                        <h4 class="m-0 text-white"> <span class="badge badge-light sum_sec_actual_all_@dataItemBySec.Sec" id="sum_sec_actual_all_@dataItemBySec.Sec" style="font-size: 16px; font-weight: 500;"> @dataItemBySec.Actual.ToString("N0") </span></h4>
                                        <span>Actual</span>
                                    </div>
                                    <div class="col">
                                        <h4 class="m-0 text-white"> <span class="badge badge-light sum_sec_forecast_all_@dataItemBySec.Sec" id="sum_sec_forecast_all_@dataItemBySec.Sec" style="font-size: 16px; font-weight: 500;"> @dataItemBySec.FC.ToString("N0") </span></h4>
                                        <span>Forecast</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            }
        }
    </div>
</div>

<script>
    function addsecNote(seccode) {
        var NoteText = $('.note_show_all_' + seccode).html().trim();
        if (NoteText != "") {
                    (async () => {
        const { value: text } = await Swal.fire({
            input: "textarea",
            title: "Note Sec " + seccode,
            inputPlaceholder: "Type your message here...",
            inputValue: $('.note_show_all_' + seccode).text(),
            inputAttributes: {
                "aria-label": "Type your message here"
            },
            customClass: {
                textarea: 'custom-textarea-class'
            },
            showCancelButton: true,
            allowOutsideClick: false,
            confirmButtonText: "Save",
            cancelButtonText: "Cancel",
        });
        if (text) {
            console.log(monthSelect);
             $.ajax({
                 type: 'POST',
                 cache: false,
                 url: '@Url.Action("SaveNote", "ForecastMidMonthSale")',
                 data: JSON.stringify({
                     MONTH: ('0' + monthSelect).slice(-2),
                     USER: '@Session["UserID"]',
                     SEC: seccode,
                     YEAR: year,
                     SLMCOD: slmCode,
                     INPUT: text
                 }),
                 dataType: 'json',
                 traditional: true,
                 contentType: "application/json; charset=utf-8",
                 processData: false,
                 beforeSend: function () {
                     // LoadingShow();
                 },
                 success: function (result) {
                     if (result.status == "success") {
                         Swal.fire({
                             title: "Saving Note Success",
                             //text: "That thing is still around?",
                             icon: "success"
                         });
                         $('.note_show_all_' + seccode).text(text);
                         $('.note_show_' + seccode).text(text);
                         console.log("Success");
                         console.log("Sec : " + seccode + "Year : " + year + " M : " + monthSelect);

                     } else {
                         LoadingHide();
                         Swal.close();
                         Swal.fire({
                             icon: 'error',
                             title: 'กรุณาแจ้งผู้ดูแลระบบ<br>โดยการแคปหน้าจอและก๊อปปี้ Error ด่านล่างนี้<br>saveNote<br>',
                             html: result.message,
                             confirmButtonColor: '#d33',
                             confirmButtonText: 'ปิด',
                             allowOutsideClick: false,
                             focusConfirm: false,
                         });
                     }
                 },
                                 error: function (ex) {
                                     //notify(ex, 'danger');
                                 },
                                 complete: function (res) {
                                     //LoadingHide();
                                 }
                             }).fail(function (error) {
                                 LoadingHide();
                                 Swal.close();
                                 Swal.fire({
                                     icon: 'error',
                                     title: 'ระบบทำงานผิดพลาด()',
                                     html: 'กรุณาแจ้งผู้ดูแลระบบ<br>โดยการแคปหน้าจอและก๊อปปี้ Error ด่านล่างนี้<br>saveNote' + error + '<br><br>',
                                     confirmButtonColor: '#d33',
                                     confirmButtonText: 'ปิด',
                                     allowOutsideClick: false,
                                     focusConfirm: false,
                                 });
                             });
                        }
                        })();
                          }
                 else {
                     (async () => {
                             const { value: text } = await Swal.fire({
                            input: "textarea",
                                 title: " Note Sec " + seccode,
                                 inputPlaceholder: "Type your message here...",
                            inputAttributes: {
                                "aria-label": "Type your message here"
                            },
                            showCancelButton: true,
                            allowOutsideClick: false,
                            confirmButtonText: "Save",
                            cancelButtonText: "Cancel",
                        });
        if (text) {
            console.log(monthSelect);
             $.ajax({
                 type: 'POST',
                 cache: false,
                 url: '@Url.Action("SaveNote", "ForecastMidMonthSale")',
                 data: JSON.stringify({
                     MONTH: ('0' + monthSelect).slice(-2),
                     USER: '@Session["UserID"]',
                     SEC: seccode,
                     YEAR: year,
                     SLMCOD: slmCode,
                     INPUT: text
                 }),
                 dataType: 'json',
                 traditional: true,
                 contentType: "application/json; charset=utf-8",
                 processData: false,
                 beforeSend: function () {
                 },
                 success: function (result) {
                     if (result.status == "success") {
                         Swal.fire({
                             title: "Saving Note success",
                             icon: "success"
                         });
                         $('.note_show_all_' + seccode).text(text);
                         $('.note_show_' + seccode).text(text);
                         console.log("Success");
                         console.log("Sec : " + seccode + "Year : " + year + " M : " + monthSelect);

                     } else {
                         LoadingHide();
                         Swal.close();
                         Swal.fire({
                             icon: 'error',
                             title: 'กรุณาแจ้งผู้ดูแลระบบ<br>โดยการแคปหน้าจอและก๊อปปี้ Error ด่านล่างนี้<br>saveNote<br>',
                             html: result.message,
                             confirmButtonColor: '#d33',
                             confirmButtonText: 'ปิด',
                             allowOutsideClick: false,
                             focusConfirm: false,
                         });
                     }
                 },
                 error: function (ex) {
                     //notify(ex, 'danger');
                 },
                 complete: function (res) {
                     //LoadingHide();

                 }
             }).fail(function (error) {
                 LoadingHide();
                 Swal.close();
                 Swal.fire({
                     icon: 'error',
                     title: 'ระบบทำงานผิดพลาด()',
                     html: 'กรุณาแจ้งผู้ดูแลระบบ<br>โดยการแคปหน้าจอและก๊อปปี้ Error ด่านล่างนี้<br>saveNote' + error + '<br><br>',
                     confirmButtonColor: '#d33',
                     confirmButtonText: 'ปิด',
                     allowOutsideClick: false,
                     focusConfirm: false,
                 });
             });
        }
        })();
            }
    }

    $(document).ready(function () {

        $('[id^="note_input_all_"]').each(function () {
            let monthSelect = $("#month_sec option:selected").val().padStart(2, '0');
            let slmCode = $("#slmCode option:selected").val();
            let year = $("#year option:selected").val();
            let secValue = $(this).data("sec");
            let noteVal;
            $.ajax({
                url: hostName + '/ForecastMidMonthSale/GetNotebysec',
                type: 'post',
                data: {
                    MONTH_INPUT: monthSelect,
                    SEC: secValue,
                    SLMCOD: slmCode,
                    YEAR: year
                },
                dataType: 'json',
                beforeSend: function () {
                    // LoadingShow();
                    $('.iconLoading').html('<div style=" font-size: 18px;"> <i class="fa fa-spinner fa-spin fa-2x" aria-hidden="true"></i> กำลังโหลดข้อมูล... </div>');
                },
                success: function (data) {
                    $('[class^="note_show_all_"]').each(function () {
                        //var secValue = $(this).data("sec");
                        var noteVal = "";
                        $.each(data, function (index, item) {
                            noteVal = item.Note;
                        });
                        if (noteVal) {
                            $('.note_show_all_' + secValue).html(noteVal);
                            $('.note_show_' + secValue).html(noteVal);
                            $(this).val(noteVal);
                            console.log("Sec : " + secValue + " = " + noteVal);
                        }
                    });
                },
                error: function () {
                    alert('Error fetching data.');
                    console.log("fail!!! ");
                },
                complete: function (res) {
                    //LoadingHide();
                    $('.iconLoading').empty();
                }
            });
        });//$Func
    });//Doccu


    //Show Note
    function ShowNote(sec) {
        var NoteText = $('.note_show_all_' + sec).html();
        if (NoteText.trim() != "") {
        Swal.fire({
            title: "Note Sec " + sec,
            html: '<label for="dropdownId" hidden>Select Month : &nbsp;</label>' +
                '<select id="dropdownId" name="dropdown" class="swal2-select " onchange="SelectMonthNote(' + sec + ',this.value);" hidden>' +
                '<option value="' + monthSelect + '" selected>Default Month</option>' +
                '<option value="1">1</option>' +
                '<option value="2">2</option>' +
                '<option value="3">3</option>' +
                '</select>' +
                '<br>' +
                '<textarea readonly disabled class=" popup-textarea-class popup-textarea-class' + sec + '">' + NoteText + '</textarea>',
            confirmButtonText: "OK",
            showCancelButton: false,
            customClass: {
                textarea: 'popup-textarea-class'
            },
        });
       }
    }

    //select by month Note
    function SelectMonthNote(sec, value) {
        $.ajax({
            url: hostName + '/ForecastMidMonthSale/GetNotebysec',
            type: 'post',
            data: {
                MONTH_INPUT: ('0' + value).slice(-2),
                SEC: sec,
                SLMCOD: slmCode,
                YEAR: year
            },
            dataType: 'json',
            beforeSend: function () {
               // LoadingShow();
            },
            success: function (data) {
                var NoteText = "";
                $.each(data, function (index, item) {
                    NoteText = item.Note;
                });
                $('.popup-text-' + sec).val(NoteText);


            },

            error: function () {
                alert('Error fetching data.');
                console.log("fail!!! ");
            },
            complete: function (res) {
                //LoadingHide();

            }
        });//Ajax
    }
</script>